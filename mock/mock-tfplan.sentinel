import "strings"
import "types"

_modules = {
	"root": {
		"data": {},
		"path": [],
		"resources": {
			"google_filestore_instance": {
				"instance": {
					0: {
						"applied": {
							"description": null,
							"file_shares": [
								{
									"capacity_gb":        2660,
									"name":               "share1",
									"nfs_export_options": [],
								},
							],
							"labels":   null,
							"location": "us-central1-b",
							"name":     "test-instance",
							"networks": [
								{
									"connect_mode": "PRIVATE_SERVICE_ACCESS",
									"modes": [
										"MODE_IPV4",
									],
									"network": "default",
								},
							],
							"tier":     "PREMIUM",
							"timeouts": null,
						},
						"destroy": false,
						"diff": {
							"create_time": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"description": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"etag": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"file_shares.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"file_shares.0.%": {
								"computed": false,
								"new":      "3",
								"old":      "",
							},
							"file_shares.0.capacity_gb": {
								"computed": false,
								"new":      "2660",
								"old":      "",
							},
							"file_shares.0.name": {
								"computed": false,
								"new":      "share1",
								"old":      "",
							},
							"file_shares.0.nfs_export_options.#": {
								"computed": false,
								"new":      "0",
								"old":      "",
							},
							"id": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"labels": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"location": {
								"computed": false,
								"new":      "us-central1-b",
								"old":      "",
							},
							"name": {
								"computed": false,
								"new":      "test-instance",
								"old":      "",
							},
							"networks.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"networks.0.%": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"networks.0.connect_mode": {
								"computed": false,
								"new":      "PRIVATE_SERVICE_ACCESS",
								"old":      "",
							},
							"networks.0.ip_addresses": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"networks.0.modes.#": {
								"computed": false,
								"new":      "1",
								"old":      "",
							},
							"networks.0.modes.0": {
								"computed": false,
								"new":      "MODE_IPV4",
								"old":      "",
							},
							"networks.0.network": {
								"computed": false,
								"new":      "default",
								"old":      "",
							},
							"networks.0.reserved_ip_range": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"project": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
							"tier": {
								"computed": false,
								"new":      "PREMIUM",
								"old":      "",
							},
							"timeouts": {
								"computed": false,
								"new":      "",
								"old":      "",
							},
							"zone": {
								"computed": true,
								"new":      "",
								"old":      "",
							},
						},
						"requires_new": false,
					},
				},
			},
		},
	},
}

module_paths = [
	[],
]

terraform_version = "1.1.4"

variables = {
	"access_token": "REDACTED_SENSITIVE",
}

module = func(path) {
	if types.type_of(path) is not "list" {
		error("expected list, got", types.type_of(path))
	}

	if length(path) < 1 {
		return _modules.root
	}

	addr = []
	for path as p {
		append(addr, "module")
		append(addr, p)
	}

	return _modules[strings.join(addr, ".")]
}

data = _modules.root.data
path = _modules.root.path
resources = _modules.root.resources
