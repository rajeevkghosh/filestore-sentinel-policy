import "strings"

providers = {
	"google": {
		"alias":               "",
		"config":              {},
		"module_address":      "",
		"name":                "google",
		"provider_config_key": "google",
		"version_constraint":  "",
	},
	"google-beta": {
		"alias": "",
		"config": {
			"access_token": {
				"references": [
					"var.access_token",
				],
			},
		},
		"module_address":      "",
		"name":                "google-beta",
		"provider_config_key": "google-beta",
		"version_constraint":  "",
	},
}

resources = {
	"google_filestore_instance.instance": {
		"address": "google_filestore_instance.instance",
		"config": {
			"file_shares": [
				{
					"capacity_gb": {
						"constant_value": 2660,
					},
					"name": {
						"constant_value": "share1",
					},
				},
			],
			"location": {
				"constant_value": "us-central1-b",
			},
			"name": {
				"constant_value": "test-instance",
			},
			"networks": [
				{
					"modes": {
						"constant_value": [
							"MODE_IPV4",
						],
					},
					"network": {
						"constant_value": "default",
					},
				},
			],
			"tier": {
				"constant_value": "PREMIUM",
			},
		},
		"count":               {},
		"depends_on":          [],
		"for_each":            {},
		"mode":                "managed",
		"module_address":      "",
		"name":                "instance",
		"provider_config_key": "google-beta",
		"provisioners":        [],
		"type":                "google_filestore_instance",
	},
}

provisioners = {}

variables = {
	"access_token": {
		"default":        null,
		"description":    "access token",
		"module_address": "",
		"name":           "access_token",
	},
}

outputs = {}

module_calls = {}

strip_index = func(addr) {
	s = strings.split(addr, ".")
	for s as i, v {
		s[i] = strings.split(v, "[")[0]
	}

	return strings.join(s, ".")
}
